OBJDIR = ../../obj/gcc/ssl
REOBJDIR = \.\.\/\.\.\/obj\/gcc\/ssl\/
DLLDIR = ../../bin
EXTRADIR = $(DLLDIR)/Extra
DLLNAME = farmail.gcc_ssl.dll
DLLFULLNAME = $(DLLDIR)/$(DLLNAME)
SRCS = base64.cpp cache.cpp charset.cpp config.cpp config_encodings.cpp crt.cpp crt_file.cpp crt_gcc3.cpp editsend.cpp farmail.cpp fastdownload.cpp fmclass.cpp fmp_api.cpp fmp_class.cpp header.cpp headerlist.cpp imapclnt.cpp mailbox.cpp mailclnt.cpp memory.cpp multiprt.cpp password.cpp progress.cpp registry.cpp rfc1522.cpp savefile.cpp smtp.cpp smtpdlg.cpp smtpdlgex.cpp socket2.cpp
DEF = farmail.gcc.def

CXX = g++
DLLTOOL = dlltool
RM = rm -f
CP = cp -f
M4 = m4 -P -DCMD=./gen_date.exe
MV = mv -f
MKDIR = mkdir -p
DEBUG = -DTDEBUG
CXXFLAGS = -Os -funsigned-char -fomit-frame-pointer -fstrict-aliasing -fno-rtti $(DEBUG) -DFARMAIL_SSL
LNKFLAGS = -mdll -s -nodefaultlibs -lstdc++ -lmingw32 -lgcc -lkernel32 -luser32 -ladvapi32 -lwsock32 -leay32 -lssl32

LNGS = farmaile.lng farmailr.lng
TXTS = history.eng.txt history.rus.txt
HLF_M4 = farmaile.hlf.m4 farmailr.hlf.m4
TXTS_M4 = readme.eng.txt.m4 readme.rus.txt.m4
DIZ_M4 = file_id.diz.m4
EHRC = fms-4ever.hrc fms-take5.hrc
EREG = PluginHotkeys.reg Script.reg PluginMacroses.reg
EXML = esc_message.xml

OBJS = $(patsubst %.cpp,$(OBJDIR)/%.o,$(filter %.cpp,$(SRCS)))
DEPS = $(patsubst %.cpp,$(OBJDIR)/%.d,$(filter %.cpp,$(SRCS)))
MAP = $(patsubst %.dll,%.map,$(DLLFULLNAME))
DOCS = $(patsubst %.txt,$(DLLDIR)/%.txt,$(TXTS)) \
       $(patsubst %.lng,$(DLLDIR)/%.lng,$(LNGS))
DOCS_M4 = $(patsubst %.hlf.m4,$(DLLDIR)/%.hlf,$(HLF_M4)) \
       $(patsubst %.diz.m4,$(DLLDIR)/%.diz,$(DIZ_M4)) \
       $(patsubst %.txt.m4,$(DLLDIR)/%.txt,$(TXTS_M4))
EXTRAS = $(patsubst %.xml,$(EXTRADIR)/%.xml,$(EXML)) \
         $(patsubst %.hrc,$(EXTRADIR)/%.hrc,$(EHRC)) \
         $(patsubst %.reg,$(EXTRADIR)/%.reg,$(EREG))


all: gen_date version.hpp $(DLLFULLNAME) $(DOCS) $(DOCS_M4) $(EXTRAS)
new: inc_build version.hpp $(DLLFULLNAME) $(DOCS) $(DOCS_M4) $(EXTRAS)

$(OBJS) $(DEPS): $(OBJDIR)
$(DLLFULLNAME): $(DLLDIR)
$(DOCS_M4): $(DLLDIR) fm_version.m4 gen_date.exe
$(DOCS): $(DLLDIR)
$(EXTRAS): $(EXTRADIR)

version.hpp: version.hpp.m4 fm_version.m4 gen_date.exe
	@echo generating version.hpp
	@$(M4) $< > $@

$(OBJDIR)/%.d: %.cpp
	@echo making depends for $<
	@$(SHELL) -ec '$(CXX) -c -MM $(CXXFLAGS) $< \
                | sed '\''s/\($*\)\.o[ :]*/$(REOBJDIR)\1.o $(REOBJDIR)\1.d: /g'\'' > $@; [ -s $@ ] || $(RM) $@'

$(OBJDIR)/%.o: %.cpp
	@echo compiling $<
	@$(CXX) $(CXXFLAGS) -c -o $@ $<

$(DLLFULLNAME): $(OBJS) $(DEF)
	@echo linking $@
	@$(CXX) -mdll -o $(DLLNAME) -Xlinker --base-file -Xlinker $(DLLNAME).base $(OBJS) $(LNKFLAGS)
	@$(DLLTOOL) --dllname $(DLLNAME) --base-file $(DLLNAME).base --output-exp $(DLLNAME).exp --def $(DEF)
	@$(CXX) -mdll  -o $(DLLNAME) $(OBJS) $(DLLNAME).exp $(LNKFLAGS) -Xlinker -Map -Xlinker $(MAP)
	@$(MV) $(DLLNAME) $(DLLDIR)
	@$(RM) $(DLLNAME).base
	@$(RM) $(DLLNAME).exp

-include $(DEPS)

$(DLLDIR)/%.lng: %.lng
	@$(CP) $< $@
$(DLLDIR)/%.hlf: %.hlf.m4
	@$(M4) $< > $@
$(DLLDIR)/%.diz: %.diz.m4
	@$(M4) $< > $@
$(DLLDIR)/%.txt: %.txt.m4
	@$(M4) $< > $@
$(DLLDIR)/%.txt: %.txt
	@$(CP) $< $@
$(EXTRADIR)/%.hrc: %.hrc
	@$(CP) $< $@
$(EXTRADIR)/%.reg: %.reg
	@$(CP) $< $@
$(EXTRADIR)/%.xml: %.xml
	@$(CP) $< $@

$(OBJDIR):
	@if !(test -d $@) then $(MKDIR) $@; fi
$(DLLDIR):
	@if !(test -d $@) then $(MKDIR) $@; fi
$(EXTRADIR):
	@if !(test -d $@) then $(MKDIR) $@; fi

inc_build: gen_date.exe
	@echo setting build info (increase build number)
	@d.bat fm_version.m4 silent
	@gen_date.exe fm_version.m4 x

gen_date: gen_date.exe
	@echo setting build info
	@gen_date.exe fm_version.m4

$(OBJDIR)/gen_date.o: gen_date.c
	@$(CXX) -c -o $@ $<

gen_date.exe: $(OBJDIR)/gen_date.o
	@echo compiling $@
	@$(CXX) -o $@ $<

clean:
	@echo cleaning up
	@$(RM) $(DEPS) $(OBJS) $(OBDIR)/gen_date.o
