rem
rem User configurable parameters: (You can set them to your fitting)
rem

rem Path to the scripts.ini file
ini_file = "scripts.ini"

templ_count = getini("templates","count",0,ini_file)
templ="global_template"

file_with_song = getini("global_settings","file_with_song","",ini_file)
file_with_song_pos = getini("global_settings","file_with_song_pos",0,ini_file)
origins_file = getini("global_settings","origins_file","",ini_file)

rem add X-Comment-To field (1 = on , 0 = off)
use_x_comment = getini("global_settings","use_x_comment",0,ini_file)

rem add Organization field (1 = on , 0 = off)
use_organization = getini("global_settings","use_organization",0,ini_file)

rem Signature start marker, every thing that comes after this is thrown away
rem (Should not be an empty string)
sig_marker = getini("global_settings","signature_marker","-- ",ini_file)

rem This is the rightmost index that will be checked for '>' to
rem determine if a line is a quote
q_max = getini("global_settings","quote_search_max",5,ini_file)

rem Use initials when quoting (1 = on, 0 = off)
use_initials = getini("global_settings","use_initials",1,ini_file)

rem Show Notice-Requested-Upon-Delivery-To headers
show_dilivery_notice_headers = getini("global_settings","show_dilivery_notice_headers",0,ini_file)

rem A string of separators for getting initials out of the e-mail username part
rem Example: some-one@somewhere.dot --> initials = so
not_alfa=" \t\",_-!.0123456789"

rem Remove the greeting part of the message: (1 = on , 0 = off)
rem This removes the first non empty line of the message and all the empty
rem lines after it
remove_hello = getini("global_settings","remove_hello",1,ini_file)

rem If "reply-to" field contains no name then it is added to it from the
rem "from" filed (if any there) (1 = on , 0 = off)
add_name = getini("global_settings","add_name",1,ini_file)

rem Message-ID
new_msg_id = date() + time()
new_msg_id = substr(new_msg_id,6,4) + substr(new_msg_id,3,2) + substr(new_msg_id,0,2) + substr(new_msg_id,10,2) + substr(new_msg_id,13,2) + substr(new_msg_id,16,2)
new_msg_id = sprintf("%s.%10.10d.%10.10d@farmail",new_msg_id,random(100000000),random(100000000))

rem
rem ------------------------ Script start -------------------------------
rem

rem parse string strored in variable sig_line
rem %name% var is taken from the name variable
rem %fullname% var is taken from the fullname variable
rem return sig_line
sub expand_vars
  while(strstr(sig_line,"%name%")!=-1)
     spec=strstr(sig_line,"%name%")
     sig_line=substr(sig_line,0,spec)+name+substr(sig_line,spec+6)
  wend
  while(strstr(sig_line,"%fullname%")!=-1)
     spec=strstr(sig_line,"%fullname%")
     sig_line=substr(sig_line,0,spec)+fullname+substr(sig_line,spec+10)
  wend
  while(strstr(sig_line,"%date%")!=-1)
     spec=strstr(sig_line,"%date%")
     sig_line=substr(sig_line,0,spec)+date()+substr(sig_line,spec+6)
  wend
  while(strstr(sig_line,"%date_sent%")!=-1)
     spec=strstr(sig_line,"%date_sent%")
     sig_line=substr(sig_line,0,spec)+date_sent+substr(sig_line,spec+11)
  wend
  while(strstr(sig_line,"%time%")!=-1)
     spec=strstr(sig_line,"%time%")
     sig_line=substr(sig_line,0,spec)+time()+substr(sig_line,spec+6)
  wend
  while(strstr(sig_line,"%farmail%")!=-1)
     spec=strstr(sig_line,"%farmail%")
     sig_line=substr(sig_line,0,spec)+version(0)+substr(sig_line,spec+9)
  wend
  while(strstr(sig_line,"%far%")!=-1)
     spec=strstr(sig_line,"%far%")
     sig_line=substr(sig_line,0,spec)+version(1)+substr(sig_line,spec+5)
  wend
  while(strstr(sig_line,"%windows%")!=-1)
     spec=strstr(sig_line,"%windows%")
     sig_line=substr(sig_line,0,spec)+version(2)+substr(sig_line,spec+9)
  wend
  while(strstr(sig_line,"%song%")!=-1)
     spec=strstr(sig_line,"%song%")
     sig_line=substr(sig_line,0,spec)+winampsong()+substr(sig_line,spec+6)
  wend
  while(strstr(sig_line,"%song_from_file%")!=-1)
     spec=strstr(sig_line,"%song_from_file%")
     sig_line=substr(sig_line,0,spec)+fileline(file_with_song,file_with_song_pos)+substr(sig_line,spec+16)
  wend
  while(strstr(sig_line,"%origin%")!=-1)
     spec=strstr(sig_line,"%origin%")
     max_origins = filecount(origins_file)
     sig_line=substr(sig_line,0,spec)+fileline(origins_file,random(max_origins))+substr(sig_line,spec+8)
  wend
  while(strstr(sig_line,"%stat%")!=-1)
     spec=strstr(sig_line,"%stat%")
     i_stat=winampstate()
     if (i_stat==3) s_stat="paused:"
     else
        if (i_stat==1) s_stat="playing:"
        else
           if (i_stat==0) s_stat="stopped:"
           else s_stat="not active now"
           endif
        endif
     endif
     sig_line=substr(sig_line,0,spec)+s_stat+substr(sig_line,spec+6)
  wend
endsub

rem parse email stored in variable email
rem return extracted_email, extracted_name, extracted_fullname
rem used variables email_count
sub parse_email
  extracted_email=""
  extracted_name=""
  extracted_fullname=""
  if(strstr(email,"<")>0)
    extracted_fullname=substr(email,0,strstr(email,"<")-1)
    if(extracted_fullname[0]=='"')
      email_count=1
    else
      email_count=0
    endif
    while(extracted_fullname[email_count]==' '||extracted_fullname[email_count]==9)
      email_count++
    wend
    extracted_fullname=substr(extracted_fullname,email_count,strlen(extracted_fullname))
    email_count=0
    while(extracted_fullname[email_count]&&extracted_fullname[email_count]!='"'&&extracted_fullname[email_count]!=' '&&extracted_fullname[email_count]!=9)
      email_count++
    wend
    extracted_name=substr(extracted_fullname,0,email_count)
    while(extracted_fullname[email_count]&&extracted_fullname[email_count]!='"')
      email_count++
    wend
    extracted_fullname=substr(extracted_fullname,0,email_count)
    extracted_email=substr(email,strstr(email,"<")+1,strlen(email))
  else
    extracted_email=email
  endif
  if(strstr(extracted_email,"<")>=0)
    extracted_email=substr(extracted_email,strstr(extracted_email,"<")+1,strlen(extracted_email))
  endif
  if(strstr(extracted_email,">")>=0)
    extracted_email=substr(extracted_email,0,strstr(extracted_email,">"))
  endif
  while(extracted_email[0]==' '||extracted_email[0]==9)
    extracted_email=substr(extracted_email,1,strlen(extracted_email))
  wend
  if(extracted_name=="")
    extracted_name=substr(extracted_email,0,strstr(extracted_email,"@"))
  endif
endsub

rem text to encode stored in variable text
rem encoding in encoding
rem return encoded text in text
rem used variables j, x
sub encode_if_needed
  if (encoding!="")
    j=strlen(text)
    if (j>0)
      x=0
      while (x<j)
        if (text[x]>127 || text[x]<32)
          j=-1
          break
        endif
        x++
      wend
      if (j==-1)
        text = encodeheader(text,encoding)
      endif
    endif
  endif
endsub

msg_header = ""

x = nlines()
while (x--)
  setpos(0,0)
  current_line=line(-1)
  delline(0)
  if (current_line=="")
    break
  endif
  msg_header=msg_header+current_line+"\n"
wend

reply_to_field=header(msg_header,"reply-to:")
from_field=header(msg_header,"from:")
subject_field=header(msg_header,"subject:")
date_sent=header(msg_header,"date:")
msg_id=header(msg_header,"message-id:")
ref_field=header(msg_header,"references:")
all=header(msg_header,"to:")
cc_field=header(msg_header,"cc:")
if (cc_field!="")
  all=all+","+cc_field
  cc_field=""
endif
msg_header=""

rem parse from field globally
email=from_field
gosub parse_email
from_fullname=extracted_fullname
from_name=extracted_name
if (from_field=="")
  from_field = reply_to_field
  reply_to_field = ""
endif

to_field = ""
to_name = ""
to_fullname = ""

rem Decide what to put in "to" field ("reply-to" or "from")
if (strlen(reply_to_field))
  to_field = reply_to_field
  if (add_name)
    email=to_field
    gosub parse_email
    if(strlen(from_fullname)&&!strlen(extracted_fullname))
      to_field=from_fullname+" <"+extracted_email+">"
      to_name=extracted_name
      to_fullname=extracted_fullname
    endif
  endif
else
  to_field = from_field
endif

initials=""
if (use_initials)
  rem Getting sender's name and initials for quoting (if any)
  rem Expecting "FirstName LastName" (w/ or w/o quotes)
  if (from_fullname=="")
    name=from_name
  else
    name=from_fullname
  endif
  if(strlen(name))
    i=0
    x=-1
    rem Process the whole name
    while(name[i]!=0)
      if((name[i]>='A'&&name[i]<='Z')||(name[i]>='a'&&name[i]<='z')||name[i]>127)
        rem Get initial of this name part
        initials=initials+char(name[i])
      endif
      rem Find next name part
      while(strstr(not_alfa,char(name[i]))<0&&name[i])
        i++
      wend
      rem End of FirstName
      if(x<0)
        x=i
      endif
      while(strstr(not_alfa,char(name[i]))>=0&&name[i])
        i++
      wend
    wend
  endif
endif

rem parse subject field in subject variable
rem return subject, subject_re_count
rem used variables none
sub process_subj
  subject_re_count=0
  if((subject[0]=='R'||subject[0]=='r')&&(subject[1]=='E'||subject[1]=='e'))
    if(subject[2]==':')
      subject=substr(subject,3,strlen(subject))
      subject_re_count++
    else
      if(subject[2]=='[')
        if(strstr(subject,"]:")>0)
          subject_re_count=subject_re_count+integer(substr(subject,3,strstr(subject,"]:")-3))
          subject=substr(subject,strstr(subject,"]:")+2,strlen(subject))
        endif
      else
        if(subject[2]=='^')
          if(strstr(subject,":")>0)
            subject_re_count=subject_re_count+integer(substr(subject,3,strstr(subject,":")-3))
            subject=substr(subject,strstr(subject,":")+1,strlen(subject))
          endif
        endif
      endif
    endif
  endif
  while(subject[0]==' '||subject[0]==9)//||subject[0]=='_')
    subject=substr(subject,1,strlen(subject))
  wend
endsub

subject=subject_field
re_add=1
while(1)
  gosub process_subj
  if(!subject_re_count)
    break
  endif
  re_add=re_add+subject_re_count
wend
if(re_add==1)
  subject="Re: "+subject
else
  subject="Re["+re_add+"]: "+subject
endif
subject_field=subject

sub remove_empty
  x = nlines()
  while (x--)
    setpos(0,0)
    if (line(-1)!="")
      break
    endif
    delline(0)
  wend
endsub

rem Remove the empty lines before the message start
gosub remove_empty

rem Skipping the greeting and the empty lines after it
if (remove_hello)
  delline(0)
  gosub remove_empty
endif

rem Smart quoting
i = -1
while (++i < nlines())
  setpos(i,0)
  current_line = line(-1)
  if (current_line == sig_marker)
    rem Signature marker reached, no need to quote after hence
    break
  endif

  rem Is line already quoted or empty?
  if ((strstr(current_line, ">") > q_max || strstr(current_line, ">") < 0) && strlen(current_line))
    rem No. Then quote.
    setline(initials + "> " + current_line , -1)
  else
    rem Yes. Then increase the number of '>' if non empty.
    if (strstr(current_line, ">") <= q_max && strstr(current_line, ">") >= 0)
      x = strstr(current_line,">")
      setline(substr(current_line, 0, x ) + ">" + substr(current_line, x, strlen(current_line)), -1)
    endif
  endif
wend

rem Deleting remaining lines after sig_marker
while (nlines()-1 > i)
  delline(nlines()-2)
wend
rem Deleting empty lines at the end
while (--i >= 0)
  setpos(i,0)
  if (strlen(line(-1)))
    break
  endif
  delline(-1)
wend

email=to_field
gosub parse_email
to_email=extracted_email

i=1
while(i<=templ_count)
  templ=getini("templates","templ"+string(i),"",ini_file)
  email=getini(templ,"to","",ini_file)
  gosub parse_email
  if(extracted_email==to_email)
    email2=getini(templ,"to_out","",ini_file)
    if(strlen(email2))
      to_field=email2
    endif
    break
  endif
  templ="global_template"
  i++
wend

encoding = getini(templ,"encoding","",ini_file)

email=to_field
gosub parse_email
to_name=extracted_name
to_fullname=extracted_fullname
text=extracted_fullname
if (text!="")
  gosub encode_if_needed
  to_field = "\"" + text + "\" " + "<"+extracted_email+">"
else
  to_field = "<"+extracted_email+">"
endif

text=subject_field
gosub encode_if_needed
subject_field=text

setpos(0,0)
i = 0
rem Write the %start% %end% block
insline(i,0)
setline( "%start%", i++ )
insline(i,0)
setline( " set %to% = " + to_field, i++ )
reply_to=getini(templ,"reply_to","",ini_file)
insline(i,0)
if (reply_to!="")
  setline( " set %reply% = " + reply_to, i++ )
else
  setline( " ;set %reply% = ", i++ )
endif
insline(i,0)
setline( " set %subj% = " + subject_field, i++ )
insline(i,0)
setline( " ;set %cc% = " + all, i++ )
insline(i,0)
setline( " ;set %bcc% = ", i++ )
insline(i,0)
if(use_organization)
  text=getini(templ,"organization","",ini_file)
  gosub encode_if_needed
  setline( " set %org% = " + text, i++ )
  insline(i,0)
endif
if(use_x_comment)
  text=from_fullname
  gosub encode_if_needed
  setline(" header X-Comment-To = " + text,i++)
  insline(i,0)
endif
setline( " header Message-ID = <" + new_msg_id + ">", i++ )
insline(i,0)
setline( " header In-Reply-To = " + msg_id, i++ )
insline(i,0)
rem Write references
if((strstr(ref_field,"<")>=0)&&(strstr(ref_field,">")-strstr(ref_field,"<")>0))
  setline(" header References = "+substr(ref_field,strstr(ref_field,"<"),strstr(ref_field,">")+1-strstr(ref_field,"<")),i++)
  ref_field=substr(ref_field,strstr(ref_field,">")+1,strlen(ref_field))
  insline(i,0)
  while((strstr(ref_field,"<")>=0)&&(strstr(ref_field,">")-strstr(ref_field,"<")>0))
    setline(" appendheader "+substr(ref_field,strstr(ref_field,"<"),strstr(ref_field,">")+1-strstr(ref_field,"<")),i++)
    ref_field=substr(ref_field,strstr(ref_field,">")+1,strlen(ref_field))
    insline(i,0)
  wend
  setline(" appendheader "+msg_id,i++)
  insline(i,0)
else
  setline(" header References = "+msg_id,i++)
  insline(i,0)
endif
if (show_dilivery_notice_headers)
  setline( " ;header Notice-Requested-Upon-Delivery-To = %from%", i++ )
  insline(i,0)
  setline( " ;header Disposition-Notification-To = %from%", i++ )
  insline(i,0)
  setline( " ;header Return-Receipt-To = %from%", i++ )
  insline(i,0)
  setline( " ;header X-Confirm-Reading-To = %from%", i++ )
  insline(i,0)
  setline( " ;header Read-Receipt-To = %from%", i++ )
  insline(i,0)
endif
setline( " ;attach ", i++ )
insline(i,0)
setline( "%end%", i++ )

pos=i
greet_reply_count=getini(templ,"greet_reply_count",0,ini_file)
i=1
name=to_name
fullname=to_fullname
while(i<=greet_reply_count)
  sig_line=getini(templ,"greet_reply"+string(i),"",ini_file)
  gosub expand_vars
  insline(pos,0)
  setline(sig_line,pos++)
  i++
wend
if (greet_reply_count>0)
  insline(pos++,0)
endif

insline(nlines()-1,1)
rem save position of message body end
cursor_pos=nlines()-2
pos=nlines()-1
insline(pos,1)
setline(sig_marker,pos)
sign_count=getini(templ,"sign_count",0,ini_file)
i=1
while(i<=sign_count)
  sig_line=getini(templ,"sign"+string(i),"",ini_file)
  gosub expand_vars
  insline(++pos,1)
  setline(sig_line,pos)
  i++
wend

rem set cursor at message body end
setpos(cursor_pos,0)
