.Language=English,English (English)
.PluginContents=Active-Help

@Contents
$ #Active-Help - Contents#

 - ~About the plug-in~@AboutPlugin@
 - ~About the author~@AboutAuthor@
 - ~License~@License@
 - ~Usage~@Usage@
 - ~Help file settings~@Settings@
 - ~Enter keyword - dialog~@EnterKeyword@
 - ~Configuration~@Configure@

@AboutPlugin
$ #About the plug-in#

  Active-Help is a FAR 1.70 beta 4+ plug-in that allows you to use the Windows
Help Engine from inside FAR and even more, it can also handle FAR Help and the
English to Russian Mueller dictionary. This allows you to look up any word in
any help file of your choice from inside the FAR Editor and more. This plug-in
also works as an extended URL activator which means that it can open any URL
or Program (full path) from inside the Editor.
  There are several other similar plug-ins but each has only a part of this
plug-in's capabilities:
  - A visual menu where you can add/delete/update the settings for each help
file you want to use.
  - A default help file is decided upon the edited file's extension.
  - The last selected help file is remembered for each editor session.
  - A much smarter algorithm for finding the word under cursor and handling
of foreign languages.
  - Support of sub plug-ins for easy addition of new help file types.
  - If you have no HtmlHelp installed on your computer, the plug-in will still
work but only with HLP files.
  - The plug-in can also be opened from the viewer, panels or the disks menu
for quick access to the help files.
  - The plug-in remembers the last topic looked up and can look it up again.
  - Small size.

 For more extensive info on plug-in capabilities see ~Usage~@Usage@.

~Back to Contents~@Contents@

@AboutAuthor
$ #About the author#

 Name:      Alex Yaroslavsky
 Home Page: ~http://code.google.com/p/evil-programmers/~@http://code.google.com/p/evil-programmers/@

 Bug reports and/or suggestions are welcomed. Enjoy!

~Back to Contents~@Contents@

@License
$ #License#

 Active-Help plugin for FAR Manager
 Copyright (C) 2002 Alex Yaroslavsky

 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

~Back to Contents~@Contents@

@Usage
$ #Usage:#

  #?. Current Topic#
  In Editor: Looks up the nearest word to the cursor or the selection on the
current line in the selected help file. If no word found, works like in
panels.
  In Panels: ~Prompts~@EnterKeyword@ you for a keyword to look up in the
selected help file.
  In Viewer: As in panels.

  Word is any character that is not a word dividing character or white-space.
The word dividing characters are taken from FAR and can be found at this
location in the registry: HKEY_CURRENT_USER\Software\Far\Editor\WordDiv

  #*. Current Topic (show menu)#
  The same as #?. Current Topic# but shows a menu of mask matched help topics
for the file currently opened in the editor. If only one help file is matchde
it's opened without showing the menu. If no help files are matched, works the
same as #?. Current Topic#.

  #!. Last Opened Topic#
  Opens up the last help file opened with the topic that was then looked up.

  #@@. Activate#
  Works in Editor only.
  Tries to activate (run) the string under cursor or the selection on the
current line. If no selection exists the string is taken as the text between
the first and last white-space around the cursor (which must stand inside the
string you want to activate). The string can be any full URL (http://),
file name (drive:\path\filename) or any similar thing which Windows can
understand and run - mailto: , ftp:// , telnet:// etc...

  Now below the separator you can select/add/delete/update/relocate the
entries for the help files you want to use.

  #Ins#
  Add a new entry (max 26).

  #Del#
  Delete the entry under cursor.

  #F4#
  Update the entry under cursor.

  #Ctrl-Up, Ctrl-Dn#
  Move the entry under cursor one position up or down.

  #Space# or #Item's hotkey#
  Temporarily select the entry under cursor. This means that the selected
entry will remain the same one (marked with `#*#') that was selected when you
opened the plug-in's menu but for the current plug-in run the "?. Current topic"
command will be applied to the temporarily selected entry (marked with `#+#').
This is needed for key macro writing.

  #Ctrl-Space#
  Select the entry under cursor.

  #Enter#
  Open and select the entry under cursor.

  #Alt-Shift-F9#
  Open plug-in's configuration menu.

~Back to Contents~@Contents@

@Settings
$ #Help file settings#

  #Description#
  The description that will be shown in plug-in's menu.

  #Type#
  The type specifier. This part tells the plug-in what sub plug-in to use
to open this help file. If you leave this filed empty the type will be detect
automatically. With the supplied plug-ins you can use the following
specifiers:
    #MS-Help2# - for MS-Help 2 files (ms-help://, HxS, The MSDN Library of
2002 or newer). For this plug-in to work you will need the H2Viewer app that
can be downloaded from http://helpware.net/mshelp2/h2viewer.htm - version
1.1.1.0 or newer. And set the correct path for this app in sub-plug-in's
configuration dialog.
    #MS-Help2DE# - for MS-Help 2 files (ms-help://, The MSDN Library of
2002 or newer). Uses native windows tools to open those help files.
    #HtmlHelp# - for HtmlHelp files (CHM, COL, The MSDN Library prior to 2002).
    #ExternalHTMLHelp# - for HtmlHelp files. Uses an external application
to open the help files. It is configured by default for KeyHH which can be
downloaded here http://keyworks.net/keyhh.htm. This should solve problems that
may arise when working simultaneously with several opened HtmlHelp files.
    #WinHelp# - for Windows help files (HLP).
    #FARHelp# - for FAR help files (HLF).
    #Mueller# - for the Mueller's English to Russian dictionary.
When working with Mueller dictionary the program searches for the hash file
which must be in the same directory with the dictionary and have the ".hsh"
extension appended to the dictionary file name (e.g dictionary -> mueller.txt,
hash -> mueller.txt.hsh). To get the dictionary and the hash file visit my
~homepage~@AboutAuthor@. To create the hash file from an existing dictionary
(Mueller only) just look up some word and the hash file will be generated
automatically.
    #CHMView# - for viewing HtmlHelp files inside far editor/viewer. You
should note that this plug-in does not fully support the CHM format and may
not always work as you might expect.
    #CHMViewFiltered# - same as CHMView but processes the HTML output through
an external filter. By default it uses the zd2t filter that you can get here
http://zmiy.by.ru/.
    #Custom# - you can pass the keyword to any external app and show its
output in FAR's viewer/editor. For example to make it work with cygwin man
write the following in the "Full name of the help file" field:
 #man %k | col -b > "%o"#

  #Full name of the help file#
  Full name of the help file.
  If you want to use The MSDN Library of prior to 2002 just write MSDN as the
file name.
  If you want to use MS-Help2 then enter the full path to the HxS file or
enter the wanted NameSpace - ms-help://NameSpace.
  If you want to use MS-Help2DE then enter the wanted NameSpace -
ms-help://NameSpace.
  For Custom this field is the command line for the external app.

  #Default Keyword#
  An optional default keyword that will be used if no other keyword
available. For FarHelp this specifies the topic to open.

  #File mask#
  A list of FAR standard file masks separated by commas. If the file opened in
editor is matched by this mask, the first entry that has this mask will be
used as the default help file for this file, or a menu of matched help files
will be displayed if you chose the corresponding option.
  Mask examples: *.[ch],*.[ch]pp or *.pas etc...

  #Always show "Enter Keyword" dialog#
  Check this to be always presented with a dialog allowing you to edit the
keyword. Set to [?] for default behaviour. (Useful when using with Mueller's
dictionary)

  #No keyword search in editor#
  When opened from editor no keyword will be searched and the default keyword
will be used automatically. Set to [?] for default behaviour. (Useful when
used with FAR help)

  #Encoding#
  The encoding (charset) of the help file. Set to "AUTO" for default encoding
according to file type.

  #Note 1:#
  If you want to have a default help file for any file type that not matches
any other mask, set the mask field of that entry to * and make it the last one
in the list of the help file settings in plug-in's menu.

  #Note 2:#
  Because you are allowed to have several entries with the same Mask settings
you can move up the entry you want to be the default for that mask and when
you need to use another entry with the same Mask settings you can then move it
up and so on...

~Back to Contents~@Contents@

@EnterKeyword
$ #Enter keyword - dialog#

 Enter the keyword you want too look up.
 For the Mueller dictionary it can be a partial word so if more than one entry
in the dictionary matches the keyword a menu showing all matching entries will
be displayed for you to choose the wanted one.
 For FAR Help it is the name of the topic to open.

~Back to Contents~@Contents@

@Configure
$ #Configuration#

  #Show plug-in in Panels#
  Enables adding of the plug-in command to the panels' Plug-ins menu.

  #Show plug-in in Viewer#
  Enables adding of the plug-in command to the viewers' Plug-ins menu.

  #Add plug-in to the Disks menu#
  Enables adding of the plug-in command to the Disks menu.

  #Disks menu hotkey ('1'-'9', '0'-autoassign)#
  Specifies the hotkey for the plug-in command in the Disks menu. If the hotkey
is set to 0, it is assigned automatically.

~Back to Contents~@Contents@
