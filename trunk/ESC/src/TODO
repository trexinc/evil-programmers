Вот, что при желании можно использовать в качестве идей к новым
версиям программы (в случайном порядке, а не в порядке
первоочередности):

0. Сделать так, чтобы флаг FMENU_CHANGECONSOLETITLE использовался
только, начиная с билда Фара 2071.

1.
---------------- Отсель Windows Clipboard ------------>8----
когда включена опция
<smartkey home="on"/>
и  я  делаю  выделения  с  середины  строки  используя  Shift-Home,   выделение
происходит до самого начала строки, а  не  до  первого  непробельного  символа.
Можно сделать так, что бы  выделение  в  этом  случае  происходило  до  первого
непробельного символа ?
----8<---------- Досель Windows Clipboard ------------------
Т.е. фактически добавить (опционально), чтобы эта настройка
действовала не только на нажатие home, но и "shift-home".

2. Это к макросам:
---------------- Отсель Windows Clipboard ------------>8----
NL>>   Если у макроса стоит auto="onload", то почему он не выполняется если
NL>>   руками выбрать в меню тип файла ?

IS> Потому что "onload", а не "onselect".
А...ээ а будет, это "онселект" ?
------
CtrlD  (схема  "Message"  из esc_message.xml), который должен заменять
выделенный текст на [sk...], на самом деле вставляет вот такой текст:

[sk...]
]
> использовать sendkeystoplugins="off"
------------------------------------------8<---------- Досель Windows Clipboard ------------------

3. Перевести ридми и, по желанию, историю на английский.

4.
---------------- Отсель Windows Clipboard ------------>8----
  Очень кумарит умодавление плагина в плане когда он сам ставит
  закрывающие кавычки. Есть подозрение что "где-то это наверняка
  настраивается". Но также есть предложение вынести куда-то в настройки
  галочку которая одним махом отменяла бы такое поведение. Ибо не
  хочется с новыми версиями плагина, вместо того чтобы просто
  переписать поверху ни о чем не думая, начинать вспоминать чего я там
  настраивал и каждый раз переписывать твои новые обновленные конфиги.
  Когда-то было похожее с КРЕСТОМ в колорере. Потом стало проще: [ ] Cross
> сделать глобальную опцию в xml для отключения addsymbol
> еще лучше - завести секцию
 <global>
 </global>
 а там ввести возможность отключения любой опции, в т.ч. и addsymbol
----8<---------- Досель Windows Clipboard ------------------

5.
---------------- Отсель Windows Clipboard ------------>8----
Если бы еще тип файла можно было
P> уточнять, скажем, по первой строчке...

AE> Хотелось бы видеть в будущих версиях:
AE> Определение типа не только по маске, но и по содержимому файла. Не
AE> знаю, насколько это возможно (т.е., конечно, возможно, но ложится ли в
AE> концепцию механизма работы плагина), но у меня такая проблема. Я работаю в 2
AE> конторах, где используется разное соглашение относительно параметра
AE> "expand tabs to spaces" в исходниках. Дома мне приходится иметь дело и
AE> с теми, и с другими исходниками, и часто менять настройки esc.xml,
AE> понятно, неудобно. По имени файлы различить нельзя, т.к. они все
AE> "*.cpp", "*.h" и т.д. На самом деле сделать вывод о требуемых
AE> настройках можно из анализа нескольких первых (в моем случае 4) байт
AE> файла (в моем случае достаточно простого сравнения).
----8<---------- Досель Windows Clipboard ------------------

6.
---------------- Отсель Windows Clipboard ------------>8----
Смотрю-смотрю на твой плагин, и всё никак не дождусь возможности задать
обработку "многоязыковых" файлов (html, wsc, wsf и т.п.). Привык иметь
разные настройки для разных типов - js, vbs, сам html и т.п.
KMD> А логика, вкратце, простая, рабоче-крестьянская:
KMD> 1. В настройках определены типы файлов, которые считаются(могут быть)
KMD> многоязычными(MultiLang="wsh/html").
KMD> 2. В настройках для соответствующих языков определены параметры
KMD> редактора (ignorecase="0"   tabsize="4"  expandtabs="1")
KMD> 3. В самом скрипте (Function GetCurLangName()) ищу (взад от текущей
KMD> позиции в тексте) тег <script>. Если внутри него, то по атрибутам
KMD> language/type определяю скриптовый язык и переустанавливаю редактор под
KMD> него.
сделать возможность наследования разрешенных параметров  от  нужных  типов  для
определенной секции файла

подсмотреть, если нужно в s_s К.Дьякова
----8<---------- Досель Windows Clipboard ------------------

7.
---------------- Отсель Windows Clipboard ------------>8----
DJ> Хочу, чтобы smart backspace работал и при expandtabs=off.
----8<---------- Досель Windows Clipboard ------------------

8.
---------------- Отсель Windows Clipboard ------------>8----
И вот у меня какое появилось желание, связанное с цитированием (может это
как-то иначе делается, а может с помощью других плагинов, но...)

Вобщем цитирование очень полезная штука, особенно при написании комментариев
к программам (!)
Вот полилась мысль и решил - оставлю-ка  я "потомкам" хоршее описание этой
новой функции, класса и .т.п. И 80 символов, в рамках которых комментарий
еще не выглядит кощумством очень быстро заканчиваются. Приходится делать
перенос на след. строку, а т.к. комментарий однострочный, а не
многострочный, то приходится этот символ вставлять и продолжать писать
далее. Можно сделать комментарий многострочным, но это не так удобно.
Эстетически и визуально не так привлекательно (ИМХО).

#>------------------------
#>  Текст комментария
#>------------------------
                                              <|---- Первый  заметно
"красивее".
/*-------------------------
      Текст комментария
--------------------------*/

Приспособил я для этой штуки цитирование. Правда пришлось пойти на небольшую
уловку: после символа однострочного комментария вставить символ ">". Ну
ничего страшного в этом нет но...
С "детства" привык я писать "рельефно", а ESC после трех TAB уже перестает
воспринимать эти строки как цитриование. :-(((

Через два дня именно это и побудило меня напиать письмо :-))


Итого, что бы хотелось?

Новую конструкция comments (или расширить quote), которая:
   1. Позволяет задавать символ комментирования (что бы не нужно было
дописывать > ),т.к. в VB это ' или REM; в PHP # ; в C++ // ; в SQL -- и т.д.
   2. Работала при любом количистве "пробелов" в начале строки.
----8<---------- Досель Windows Clipboard ------------------

9.
---------------- Отсель Windows Clipboard ------------>8----
DJ>> А сделать, чтобы inherit обрабатывался и в том случае, если
DJ>> производный тип указан в файле раньше базового, ты не хочешь?

IS> Скажем так - я не знаю, как это красиво сделать. Сейчас все строго и
IS> стройно - разбор и сравнение типов идет от начала файла к концу,
IS> наследоваться можно только от разобранных ранее типов. Если
IS> разрешить наследование вперед, то это замедлит разбор (придется
IS> делать два пробега по типам: первый - для поиска inherit, второй
IS> - для разбора типов с учетом первого пробега), но, главное, - не
IS> понятно, как вести себя в случае конфликтов (типы пытаются
IS> унаследоваться друг от друга), как расставлять приоритеты по
IS> наследованию - например:
IS> тип1 наследует от тип2
IS> тип2 наследует от тип4
IS> тип3 наследует от тип2
IS> тип4 наследует от тип3

IS> Хочется голову ломать? Ломай и доложи схему разборки конфликтов
IS> мне, возможно, она понравится и будет реализована. А я пока буду
IS> следовать принципу - чем проще, тем надежнее и более предсказуемо.

  Да, два прохода, несомненно, потребуются. А разбирать конфликты не
надо - надо просто от каждого типа бежать вверх по цепочке inherit и в
случае обнаружения того же самого типа ругаться и выкидывать тип из
конфига. Чуть сложнее, но не менее надежно и предсказуемо.
----8<---------- Досель Windows Clipboard ------------------

10. Обработка масок исключения (в т.ч.при поиске таблиц)

11.  Повторить  плагин  editormenu  -  для того, чтобы его работа
зависела  от  расширения в стиле [esc] (влиет еще местонахождение
файла) и для унификации подобных вещей

12. Добавить поддержку EXPAND_NEWTABS.
